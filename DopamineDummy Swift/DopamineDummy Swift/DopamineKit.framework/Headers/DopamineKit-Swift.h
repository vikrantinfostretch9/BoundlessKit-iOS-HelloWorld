// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIImage;
@class UIImageView;
@class UILabel;
@class UIButton;
@class NSCoder;

SWIFT_CLASS("_TtC11DopamineKit25DesignerReinforcementView")
@interface DesignerReinforcementView : UIView
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIImageView * _Nonnull imageView;
@property (nonatomic, strong) UILabel * _Nonnull primaryLabel;
@property (nonatomic, copy) NSString * _Nonnull primaryText;
@property (nonatomic, strong) UILabel * _Nonnull secondaryLabel;
@property (nonatomic, copy) NSString * _Nonnull secondaryText;
@property (nonatomic, strong) UIButton * _Nonnull closeButton;
@property (nonatomic, copy) NSString * _Nonnull buttonText;
- (void)dismiss;

/// A block to call when the user taps on the reinforcement.
@property (nonatomic, copy) void (^ _Nullable didTapBlock)(void);

/// A block to call after the reinforcement has finished dismissing and is off screen.
@property (nonatomic, copy) void (^ _Nullable didDismissBlock)(void);

/// Whether or not the reinforcement should dismiss itself when the user taps. Defaults to false.
@property (nonatomic) BOOL dismissesOnTap;

/// Whether or not the reinforcement should dismiss itself when the user swipes up. Defaults to true.
@property (nonatomic) BOOL dismissesOnSwipe;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DopamineKit11DopamineKit")
@interface DopamineKit : NSObject

/// This function sends an asynchronous tracking call for the specified actionID
///
/// \param actionID the name of the action
///
/// \param metaData Default <code>nil
/// </code> - metadata as a set of key-value pairs that can be sent with a tracking call. The value should be JSON formattable.
///
/// \param secondaryIdentity Default <code>nil
/// </code> - an additional idetification string
///
/// \param callback Optional - A callback function with the track HTTP response code passed in as a String
+ (void)track:(NSString * _Nonnull)actionID metaData:(NSDictionary<NSString *, id> * _Nullable)metaData secondaryIdentity:(NSString * _Nullable)secondaryIdentity callback:(void (^ _Nonnull)(NSString * _Nullable))callback;

/// This function sends an asynchronous reinforcement call for the specified actionID
///
/// \param actionID the name of the action
///
/// \param metaData Default <code>nil
/// </code> - metadata as a set of key-value pairs that can be sent with a tracking call. The value should be JSON formattable.
///
/// \param secondaryIdentity Default <code>nil
/// </code> - an additional idetification string
///
/// \param callback A callback function with the reinforcement response passed in as a String
+ (void)reinforce:(NSString * _Nonnull)actionID metaData:(NSDictionary<NSString *, id> * _Nullable)metaData secondaryIdentity:(NSString * _Nullable)secondaryIdentity timeoutSeconds:(float)timeoutSeconds callback:(void (^ _Nonnull)(NSString * _Nullable))callback;
@end

@class NSAttributedString;

SWIFT_CLASS("_TtC11DopamineKit8MemeView")
@interface MemeView : UIView
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;
@property (nonatomic) CGSize size;
@property (nonatomic, readonly, strong) UILabel * _Nonnull topLabel;
@property (nonatomic, strong) NSAttributedString * _Nonnull topString;
@property (nonatomic, readonly, strong) UILabel * _Nonnull bottomLabel;
@property (nonatomic, strong) NSAttributedString * _Nonnull bottomString;
- (NSDictionary<NSString *, NSObject *> * _Nonnull)defaultStringAttributes;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DopamineKit27ReinforcementModalPresenter")
@interface ReinforcementModalPresenter : UIViewController

/// Initializes a ReinforcementModalPresenter
///
/// \param view Default <code>nil
/// </code> - the view for this UIViewController
- (nonnull instancetype)initWithView:(UIView * _Nullable)view OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidAppear:(BOOL)animated;

/// Calls this dismissViewControllerAnimated on the presented view controller itself; UIKit asks the presenting view controller to handle the dismissal itself.
- (void)dismissSelf;
- (void)viewDidDisappear:(BOOL)animated;

/// You can use this function to present the view controller. It is a shortcut for the presentViewController function
///
/// \param owningViewController the view controller that will present this view
///
/// \param animated Default <code>false
/// </code> - Pass <code>true
/// </code> to animate the presentation; otherwise, pass false.
///
/// \param completion Pass a function that will be executed once the view is presented and done animating
- (void)show:(UIViewController * _Null_unspecified)owningViewController animated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
@end

#pragma clang diagnostic pop
