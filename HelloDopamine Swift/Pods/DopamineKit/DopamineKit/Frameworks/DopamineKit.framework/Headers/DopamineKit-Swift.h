// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import Foundation;
@import CoreGraphics;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIColor;
@class UILabel;
@class UIImageView;
@class UIImage;
@class NSCoder;


/// Banner is a dropdown notification view that presents above the main view controller, but below the status bar.
SWIFT_CLASS("_TtC11DopamineKit6Banner")
@interface Banner : UIView

/// How long the slide down animation should last.
@property (nonatomic) NSTimeInterval animationDuration;

/// The preferred style of the status bar during display of the banner. Defaults to .LightContent.
///
/// If the banner's <code>adjustsStatusBarStyle
/// </code> is false, this property does nothing.
@property (nonatomic) UIStatusBarStyle preferredStatusBarStyle;

/// Whether or not this banner should adjust the status bar style during its presentation. Defaults to false.
@property (nonatomic) BOOL adjustsStatusBarStyle;

/// The color of the text as well as the image tint color if shouldTintImage is true.
@property (nonatomic, strong) UIColor * _Nonnull textColor;

/// Whether or not the banner should show a shadow when presented.
@property (nonatomic) BOOL hasShadows;

/// The color of the background view. Defaults to nil.
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;

/// The opacity of the background view. Defaults to 0.95.
@property (nonatomic) CGFloat alpha;

/// A block to call when the uer taps on the banner.
@property (nonatomic, copy) void (^ _Nullable didTapBlock)(void);

/// A block to call after the banner has finished dismissing and is off screen.
@property (nonatomic, copy) void (^ _Nullable didDismissBlock)(void);

/// Whether or not the banner should dismiss itself when the user taps. Defaults to true.
@property (nonatomic) BOOL dismissesOnTap;

/// Whether or not the banner should dismiss itself when the user swipes up. Defaults to true.
@property (nonatomic) BOOL dismissesOnSwipe;

/// Whether or not the banner should tint the associated image to the provided textColor. Defaults to true.
@property (nonatomic) BOOL shouldTintImage;

/// The label that displays the banner's title.
@property (nonatomic, readonly, strong) UILabel * _Nonnull titleLabel;

/// The label that displays the banner's subtitle.
@property (nonatomic, readonly, strong) UILabel * _Nonnull detailLabel;

/// The image view that displays the image.
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;

/// A Banner with the provided title, subtitle, and optional image, ready to be presented with show().
///
/// \param title The title of the banner. Optional. Defaults to nil.
///
/// \param subtitle The subtitle of the banner. Optional. Defaults to nil.
///
/// \param image The image on the left of the banner. Optional. Defaults to nil.
///
/// \param backgroundColor The color of the banner's background view. Defaults to <code>UIColor.blackColor()
/// </code>.
///
/// \param didTapBlock An action to be called when the user taps on the banner. Optional. Defaults to <code>nil
/// </code>.
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title subtitle:(NSString * _Nullable)subtitle image:(UIImage * _Nullable)image backgroundColor:(UIColor * _Nonnull)backgroundColor didTapBlock:(void (^ _Nullable)(void))didTapBlock OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC11DopamineKit8CandyBar")
@interface CandyBar : Banner

/// A CandyBar with the provided title, subtitle, and optional image, ready to be presented with show().
///
/// \param title The title of the banner. Optional. Defaults to nil.
///
/// \param subtitle The subtitle of the banner. Optional. Defaults to nil.
///
/// \param image The image on the left of the banner. Optional. Defaults to nil.
///
/// \param backgroundColor The color of the banner's background view. Defaults to <code>UIColor.blackColor()
/// </code>.
///
/// \param didTapBlock An action to be called when the user taps on the banner. Optional. Defaults to <code>nil
/// </code>.
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title subtitle:(NSString * _Nullable)subtitle image:(UIImage * _Nullable)image backgroundColor:(UIColor * _Nonnull)backgroundColor didTapBlock:(void (^ _Nullable)(void))didTapBlock OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DopamineKit11DopamineKit")
@interface DopamineKit : NSObject
+ (DopamineKit * _Nonnull)instance;

/// This function sends an asynchronous tracking call for the specified actionID
///
/// \param actionID the name of the action
///
/// \param metaData Default <code>nil
/// </code> - metadata as a set of key-value pairs that can be sent with a tracking call. The value should be JSON formattable.
///
/// \param secondaryIdentity Default <code>nil
/// </code> - an additional idetification string
///
/// \param callback Optional - A callback function with the track HTTP response code passed in as a String
+ (void)track:(NSString * _Nonnull)actionID metaData:(NSDictionary<NSString *, id> * _Nullable)metaData secondaryIdentity:(NSString * _Nullable)secondaryIdentity callback:(void (^ _Nonnull)(NSString * _Nonnull))callback;

/// This function sends an asynchronous reinforcement call for the specified actionID
///
/// \param actionID the name of the action
///
/// \param metaData Default <code>nil
/// </code> - metadata as a set of key-value pairs that can be sent with a tracking call. The value should be JSON formattable.
///
/// \param secondaryIdentity Default <code>nil
/// </code> - an additional idetification string
///
/// \param callback A callback function with the reinforcement response passed in as a String
+ (void)reinforce:(NSString * _Nonnull)actionID metaData:(NSDictionary<NSString *, id> * _Nullable)metaData secondaryIdentity:(NSString * _Nullable)secondaryIdentity timeoutSeconds:(float)timeoutSeconds callback:(void (^ _Nonnull)(NSString * _Nonnull))callback;

/// This function takes a hex string and returns a UIColor
///
/// \param hex A hex string with either format <code>"#ffffff"
/// </code> or <code>"ffffff"
/// </code> or <code>"#FFFFFF"
/// </code>
///
/// \returns  The corresponding UIColor for valid hex strings, <code>UIColor.grayColor()
/// </code> otherwise
+ (UIColor * _Nonnull)hexStringToUIColor:(NSString * _Nonnull)hex;
@property (nonatomic, copy) NSString * _Nonnull propertyListPath;
@end

@class NSAttributedString;

SWIFT_CLASS("_TtC11DopamineKit8MemeView")
@interface MemeView : UIView
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;

/// Resizes the image and adjusts the top and bottom text
@property (nonatomic) CGSize size;
@property (nonatomic, readonly, strong) UILabel * _Nonnull topLabel;
@property (nonatomic, strong) NSAttributedString * _Nonnull topString;
@property (nonatomic, readonly, strong) UILabel * _Nonnull bottomLabel;
@property (nonatomic, strong) NSAttributedString * _Nonnull bottomString;
- (NSDictionary<NSString *, NSObject *> * _Nonnull)defaultStringAttributes;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSLayoutConstraint (SWIFT_EXTENSION(DopamineKit))
@end


@interface UIView (SWIFT_EXTENSION(DopamineKit))
@end

#pragma clang diagnostic pop
